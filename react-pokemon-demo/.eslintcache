[{"D:\\workspace\\react-pokemon-demo\\react-pokemon-demo\\src\\index.js":"1"},{"size":2307,"mtime":1607280756091,"results":"2","hashOfConfig":"3"},{"filePath":"4","messages":"5","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"6"},"1c01ttu","D:\\workspace\\react-pokemon-demo\\react-pokemon-demo\\src\\index.js",["7","8","9","10","11"],"import React, {useState, useEffect} from 'react'\nimport ReactDOM from 'react-dom'\nimport axios from 'axios'\nimport './index.css'\n\nfunction App() {\n  const [pokedex, setPokedex] = useState([])\n  const [wildPokemon, setWildPokemon] = useState({});\n\n  useEffect(() => {\n    encounterWildPokemon()\n  }, [])\n\n  const pokeId = () => {\n    const min = Math.ceil(1)\n    const max = Math.floor(151)\n    return Math.floor(Math.random() * (max - min + 1)) + min\n  }\n\n  const encounterWildPokemon = () => {\n    axios\n      .get('https://pokeapi.co/api/v2/pokemon/' + pokeId())\n      .then(response => {\n        setWildPokemon(response.data);\n      })\n  }\n\n  const catchPokemon = (pokemon) => {\n    setPokedex(state => {\n      const monExists = (state.filter(p => pokemon.id == p.id).length > 0);\n\n      if (!monExists) {\n        state = [...state, pokemon]\n        state.sort(function (a, b) {\n          return a.id - b.id\n        })\n      }\n      return state\n    })\n    encounterWildPokemon()\n  }\n\n  const releasePokemon = id => {\n    setPokedex(state => state.filter(p => p.id != id))\n  }\n\n  return (\n    <div className=\"app-wrapper\">\n        <header>\n          <h1 className=\"title\">React Hooks</h1>\n          <h3 className=\"subtitle\">With Pokémon</h3>\n        </header>\n\n        <section className=\"wild-pokemon\">\n          <h2>Wild Encounter</h2>\n          <img src={\"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/\" + wildPokemon.id + \".png\"} className=\"sprite\" />\n          <h3>{wildPokemon.name}</h3>\n          <button className=\"catch-btn\" onClick={() => catchPokemon(wildPokemon)}>CATCH</button>\n        </section>\n\n        <section className=\"pokedex\">\n          <h2>Pokédex</h2>\n          <div className=\"pokedex-list\">\n            {pokedex.map(pokemon => (\n              <div className=\"pokemon\" key={pokemon.id}>\n                <img src={\"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/\" + pokemon.id + \".png\"} className=\"sprite\" />\n                <h3 className=\"pokemon-name\">{pokemon.name}</h3>\n                <button className=\"remove\" onClick={() => releasePokemon(pokemon.id)}>&times;</button>\n              </div>\n            ))}\n          </div>\n        </section>\n    </div>\n  )\n}\n\nReactDOM.render(<App />, document.getElementById('root'))",{"ruleId":"12","severity":1,"message":"13","line":12,"column":6,"nodeType":"14","endLine":12,"endColumn":8,"suggestions":"15"},{"ruleId":"16","severity":1,"message":"17","line":30,"column":55,"nodeType":"18","messageId":"19","endLine":30,"endColumn":57},{"ruleId":"16","severity":1,"message":"20","line":44,"column":48,"nodeType":"18","messageId":"19","endLine":44,"endColumn":50},{"ruleId":"21","severity":1,"message":"22","line":56,"column":11,"nodeType":"23","endLine":56,"endColumn":145},{"ruleId":"21","severity":1,"message":"22","line":66,"column":17,"nodeType":"23","endLine":66,"endColumn":147},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'encounterWildPokemon'. Either include it or remove the dependency array.","ArrayExpression",["24"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",{"desc":"25","fix":"26"},"Update the dependencies array to be: [encounterWildPokemon]",{"range":"27","text":"28"},[299,301],"[encounterWildPokemon]"]